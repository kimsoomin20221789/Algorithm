//STL을 사용해야하고,STL이 없는데 이진트리를 쓰고싶다면 어떻게든 이진트리를 하면안됨
// 이진트리 자체는 구현도 어렵고, 시간복잡도도 매우 높음.
//이진검색트리는 시간복잡도가 안좋으니 해쉬나 이분탐색으로 구해야함

//트리란? -> 루트와 리프 , edge와 vertix

//이진트리 = 자식이 2개이하인 트리
//이진 검색 트리란 = 
//부모 노드를 기준으로
//왼쪽 서브트리의 모든값은 부모값보다 작고 
//오른쪽 서브트리의 모든값은 부모의 값보다 큰 이진트리

//왜굳이 이진검색트리를 쓸까? 
//insert, erase, find, update 연산이 모두 logN 시간
//erase, find, update모두 배열에서는 N임
//해쉬는 없고 이진 검색트리의 강점 = 원소가 크기 순으로 정렬됨. (대소와 관련된 정.렬)
//5보다 큰 최초의 원소를 알 수 있음 

//set, multiset(중복 원소 허용, 하나 지우면 모든게 지워짐), map
//1. 문제를 풀다가 set, map lower_bound, prev_next 가 써야만 한다면 
    //unordered_set, unordered_map 이 빠름 (해쉬? 로 되어있을것같음.)
//2. 이진 검색트리는 O(logN)이지만 이분탐색, 정렬 O(logN) 보다 느림. 

//백준 7662는 대소관계가 잘 설정된다는 특성을 이용할 수 있는문제